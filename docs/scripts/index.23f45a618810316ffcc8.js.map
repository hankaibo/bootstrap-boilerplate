{"version":3,"sources":["webpack:///scripts/index.23f45a618810316ffcc8.js","webpack:///./src/scripts/page/index.js","webpack:///./~/metisMenu/dist/metisMenu.js?7823**","webpack:///d:/project/mybootstrap/~/.4.3.0@d3/build/d3.js?9f2f"],"names":["webpackJsonp","1","module","exports","15","__webpack_require__","$","d3","svg","select","margin","top","right","bottom","left","width","attr","height","x","scaleBand","rangeRound","padding","y","scaleLinear","g","append","tsv","d","frequency","error","data","domain","map","letter","max","call","axisBottom","axisLeft","ticks","text","selectAll","enter","bandwidth","2","3","4","jQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","undefined","apply","this","_jquery","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","getSpecialTransitionEndEvent","bindType","transition","end","delegateType","handle","event","is","handleObj","handler","arguments","transitionEndTest","window","QUnit","el","document","createElement","name","TransitionEndEvent","style","transitionEndEmulator","duration","_this2","called","one","Util","TRANSITION_END","setTimeout","triggerTransitionEnd","setTransitionEndSupport","supportsTransitionEnd","special","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","TRANSITION_DURATION","Default","toggle","doubleTapToGo","preventDefault","activeClass","collapseClass","collapseInClass","collapsingClass","Event","SHOW","SHOWN","HIDE","HIDDEN","CLICK_DATA_API","WebkitTransition","MozTransition","OTransition","element","trigger","Boolean","MetisMenu","config","_element","_config","_getConfig","_transitioning","init","value","self","find","has","children","addClass","not","on","e","_this","_parent","parent","_list","hasClass","_hide","_show","onTransitionStart","_doubleTapToGo","stopPropagation","location","_el","startEvent","isDefaultPrevented","siblings","removeClass","setTransitioning","complete","scrollHeight","offsetHeight","onTransitionEnd","css","isTransitioning","extend","each","$this","Error","_jQueryInterface","noConflict","53","8","ascendingComparator","f","ascending","tickStep","start","stop","count","step0","Math","abs","step1","pow","floor","log","LN10","e10","e5","e2","Map","map$1","object","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","isNaN","xm","ym","xp","yp","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","abort","c","noabort","r","maybeNotify","queue","concurrency","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","parseCss","identity$2","cssNode","cssRoot","documentElement","cssView","defaultView","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","z","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","slice$3","band","rescale","reverse","range$$1","paddingInner","paddingOuter","values","ordinalRange","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","bindIndex","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","id","schedule","__transition","state","CREATED","set$3","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","range0","range1","position","order","tickExit","tickEnter","line","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"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","file":"scripts/index.23f45a618810316ffcc8.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 15:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/**\n * 引入css文件\n * 支持css,less,scss三种格式\n */\n__webpack_require__(5);\n__webpack_require__(2);\n__webpack_require__(1);\n__webpack_require__(3);\n\n/**\n * 引入js\n */\n__webpack_require__(0);\n__webpack_require__(6);\n__webpack_require__(4);\nvar d3 = __webpack_require__(8);\n__webpack_require__(7);\n\n//\n$(function () {\n  var svg = d3.select('svg'),\n    margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    },\n    width = +svg.attr('width') - margin.left - margin.right,\n    height = +svg.attr('height') - margin.top - margin.bottom;\n\n  var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n\n  var g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  d3.tsv('/scripts/data/data.tsv', function (d) {\n    d.frequency = +d.frequency;\n    return d;\n  }, function (error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function (d) {\n      return d.letter;\n    }));\n    y.domain([0, d3.max(data, function (d) {\n      return d.frequency;\n    })]);\n\n    g.append('g')\n      .attr('class', 'axis axis--x')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x));\n\n    g.append('g')\n      .attr('class', 'axis axis--y')\n      .call(d3.axisLeft(y).ticks(10, '%'))\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '0.71em')\n      .attr('text-anchor', 'end')\n      .text('Frequency');\n\n    g.selectAll('.bar')\n      .data(data)\n      .enter().append('rect')\n      .attr('class', 'bar')\n      .attr('x', function (d) {\n        return x(d.letter);\n      })\n      .attr('y', function (d) {\n        return y(d.frequency);\n      })\n      .attr('width', x.bandwidth())\n      .attr('height', function (d) {\n        return height - y(d.frequency);\n      });\n  });\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * metismenu - v2.5.2\n * A jQuery menu plugin\n * https://github.com/onokumus/metisMenu#readme\n *\n * Made by Osman Nuri Okumuş <onokumus@gmail.com> (https://github.com/onokumus)\n * Under MIT License\n */\n\n(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(require('jquery'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.jquery);\n    global.metisMenu = mod.exports;\n  }\n})(this, function (_jquery) {\n  'use strict';\n\n  var _jquery2 = _interopRequireDefault(_jquery);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var MetisMenu = function ($) {\n\n    var NAME = 'metisMenu';\n    var DATA_KEY = 'metisMenu';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 350;\n\n    var Default = {\n      toggle: true,\n      doubleTapToGo: false,\n      preventDefault: true,\n      activeClass: 'active',\n      collapseClass: 'collapse',\n      collapseInClass: 'in',\n      collapsingClass: 'collapsing'\n    };\n\n    var Event = {\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var transition = false;\n\n    var TransitionEndEvent = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: transition.end,\n        delegateType: transition.end,\n        handle: function handle(event) {\n          if ($(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments);\n          }\n        }\n      };\n    }\n\n    function transitionEndTest() {\n      if (window.QUnit) {\n        return false;\n      }\n\n      var el = document.createElement('mm');\n\n      for (var name in TransitionEndEvent) {\n        if (el.style[name] !== undefined) {\n          return {\n            end: TransitionEndEvent[name]\n          };\n        }\n      }\n\n      return false;\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this2 = this;\n\n      var called = false;\n\n      $(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this2);\n        }\n      }, duration);\n    }\n\n    function setTransitionEndSupport() {\n      transition = transitionEndTest();\n\n      if (Util.supportsTransitionEnd()) {\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n      }\n    }\n\n    var Util = {\n      TRANSITION_END: 'mmTransitionEnd',\n\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $(element).trigger(transition.end);\n      },\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(transition);\n      }\n    };\n\n    setTransitionEndSupport();\n\n    var MetisMenu = function () {\n      function MetisMenu(element, config) {\n        _classCallCheck(this, MetisMenu);\n\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._transitioning = null;\n\n        this.init();\n      }\n\n      _createClass(MetisMenu, [{\n        key: 'init',\n        value: function init() {\n          var self = this;\n          $(this._element).find('li.' + this._config.activeClass).has('ul').children('ul').attr('aria-expanded', true).addClass(this._config.collapseClass + ' ' + this._config.collapseInClass);\n\n          $(this._element).find('li').not('.' + this._config.activeClass).has('ul').children('ul').attr('aria-expanded', false).addClass(this._config.collapseClass);\n\n          //add the 'doubleTapToGo' class to active items if needed\n          if (this._config.doubleTapToGo) {\n            $(this._element).find('li.' + this._config.activeClass).has('ul').children('a').addClass('doubleTapToGo');\n          }\n          $(this._element).find('li').has('ul').children('a').on(Event.CLICK_DATA_API, function (e) {\n            var _this = $(this);\n            var _parent = _this.parent('li');\n            var _list = _parent.children('ul');\n            if (self._config.preventDefault) {\n              e.preventDefault();\n            }\n            if (_this.attr('aria-disabled') === 'true') {\n              return;\n            }\n            if (_parent.hasClass(self._config.activeClass) && !self._config.doubleTapToGo) {\n              _this.attr('aria-expanded', false);\n              self._hide(_list);\n            } else {\n              self._show(_list);\n              _this.attr('aria-expanded', true);\n            }\n\n            if (self._config.onTransitionStart) {\n              self._config.onTransitionStart(e);\n            }\n\n            //Do we need to enable the double tap\n            if (self._config.doubleTapToGo) {\n              //if we hit a second time on the link and the href is valid, navigate to that url\n              if (self._doubleTapToGo(_this) && _this.attr('href') !== '#' && _this.attr('href') !== '') {\n                e.stopPropagation();\n                document.location = _this.attr('href');\n                return;\n              }\n            }\n          });\n        }\n      }, {\n        key: '_show',\n        value: function _show(element) {\n          if (this._transitioning || $(element).hasClass(this._config.collapsingClass)) {\n            return;\n          }\n          var _this = this;\n          var _el = $(element);\n\n          var startEvent = $.Event(Event.SHOW);\n          _el.trigger(startEvent);\n\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          _el.parent('li').addClass(this._config.activeClass);\n\n          if (this._config.toggle) {\n            this._hide(_el.parent('li').siblings().children('ul.' + this._config.collapseInClass).attr('aria-expanded', false));\n          }\n\n          _el.removeClass(this._config.collapseClass).addClass(this._config.collapsingClass).height(0);\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n\n            _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass + ' ' + _this._config.collapseInClass).height('').attr('aria-expanded', true);\n\n            _this.setTransitioning(false);\n\n            _el.trigger(Event.SHOWN);\n          };\n\n          if (!Util.supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          _el.height(_el[0].scrollHeight).one(Util.TRANSITION_END, complete);\n\n          transitionEndEmulator(TRANSITION_DURATION);\n        }\n      }, {\n        key: '_hide',\n        value: function _hide(element) {\n\n          if (this._transitioning || !$(element).hasClass(this._config.collapseInClass)) {\n            return;\n          }\n          var _this = this;\n          var _el = $(element);\n\n          var startEvent = $.Event(Event.HIDE);\n          _el.trigger(startEvent);\n\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          _el.parent('li').removeClass(this._config.activeClass);\n          _el.height(_el.height())[0].offsetHeight;\n\n          _el.addClass(this._config.collapsingClass).removeClass(this._config.collapseClass).removeClass(this._config.collapseInClass);\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            if (_this._transitioning && _this._config.onTransitionEnd) {\n              _this._config.onTransitionEnd();\n            }\n\n            _this.setTransitioning(false);\n            _el.trigger(Event.HIDDEN);\n\n            _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass).attr('aria-expanded', false);\n          };\n\n          if (!Util.supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          _el.height() == 0 || _el.css('display') == 'none' ? complete() : _el.height(0).one(Util.TRANSITION_END, complete);\n\n          transitionEndEmulator(TRANSITION_DURATION);\n        }\n      }, {\n        key: '_doubleTapToGo',\n        value: function _doubleTapToGo(element) {\n          if (element.hasClass('doubleTapToGo')) {\n            element.removeClass('doubleTapToGo');\n            return true;\n          }\n          if (element.parent().children('ul').length) {\n            $(this._element).find('.doubleTapToGo').removeClass('doubleTapToGo');\n\n            element.addClass('doubleTapToGo');\n            return false;\n          }\n        }\n      }, {\n        key: 'setTransitioning',\n        value: function setTransitioning(isTransitioning) {\n          this._transitioning = isTransitioning;\n        }\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, Default, config);\n          return config;\n        }\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var $this = $(this);\n            var data = $this.data(DATA_KEY);\n            var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\n\n            if (!data) {\n              data = new MetisMenu(this, _config);\n              $this.data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }]);\n\n      return MetisMenu;\n    }();\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = MetisMenu._jQueryInterface;\n    $.fn[NAME].Constructor = MetisMenu;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return MetisMenu._jQueryInterface;\n    };\n    return MetisMenu;\n  }(jQuery);\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(15);\n\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.3.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(k, tx, ty) {\n  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * k + tx, y * k + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ })\n\n},[53]);\n\n\n// WEBPACK FOOTER //\n// scripts/index.23f45a618810316ffcc8.js","/**\n * 引入css文件\n * 支持css,less,scss三种格式\n */\nrequire('bootstrap/dist/css/bootstrap.min.css');\nrequire('metismenu/dist/metisMenu.min.css');\nrequire('font-awesome/css/font-awesome.min.css');\nrequire('../../styles/common/sb-admin-2.scss');\n\n/**\n * 引入js\n */\nrequire('jquery');\nrequire('bootstrap');\nrequire('metisMenu');\nvar d3 = require('d3');\nrequire('../common/sb-admin-2.js');\n\n//\n$(function () {\n  var svg = d3.select('svg'),\n    margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    },\n    width = +svg.attr('width') - margin.left - margin.right,\n    height = +svg.attr('height') - margin.top - margin.bottom;\n\n  var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n\n  var g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  d3.tsv('/scripts/data/data.tsv', function (d) {\n    d.frequency = +d.frequency;\n    return d;\n  }, function (error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function (d) {\n      return d.letter;\n    }));\n    y.domain([0, d3.max(data, function (d) {\n      return d.frequency;\n    })]);\n\n    g.append('g')\n      .attr('class', 'axis axis--x')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x));\n\n    g.append('g')\n      .attr('class', 'axis axis--y')\n      .call(d3.axisLeft(y).ticks(10, '%'))\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '0.71em')\n      .attr('text-anchor', 'end')\n      .text('Frequency');\n\n    g.selectAll('.bar')\n      .data(data)\n      .enter().append('rect')\n      .attr('class', 'bar')\n      .attr('x', function (d) {\n        return x(d.letter);\n      })\n      .attr('y', function (d) {\n        return y(d.frequency);\n      })\n      .attr('width', x.bandwidth())\n      .attr('height', function (d) {\n        return height - y(d.frequency);\n      });\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/page/index.js\n// module id = 15\n// module chunks = 2","/*\n * metismenu - v2.5.2\n * A jQuery menu plugin\n * https://github.com/onokumus/metisMenu#readme\n *\n * Made by Osman Nuri Okumuş <onokumus@gmail.com> (https://github.com/onokumus)\n * Under MIT License\n */\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require('jquery'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.jquery);\n    global.metisMenu = mod.exports;\n  }\n})(this, function (_jquery) {\n  'use strict';\n\n  var _jquery2 = _interopRequireDefault(_jquery);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var MetisMenu = function ($) {\n\n    var NAME = 'metisMenu';\n    var DATA_KEY = 'metisMenu';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 350;\n\n    var Default = {\n      toggle: true,\n      doubleTapToGo: false,\n      preventDefault: true,\n      activeClass: 'active',\n      collapseClass: 'collapse',\n      collapseInClass: 'in',\n      collapsingClass: 'collapsing'\n    };\n\n    var Event = {\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var transition = false;\n\n    var TransitionEndEvent = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: transition.end,\n        delegateType: transition.end,\n        handle: function handle(event) {\n          if ($(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments);\n          }\n        }\n      };\n    }\n\n    function transitionEndTest() {\n      if (window.QUnit) {\n        return false;\n      }\n\n      var el = document.createElement('mm');\n\n      for (var name in TransitionEndEvent) {\n        if (el.style[name] !== undefined) {\n          return {\n            end: TransitionEndEvent[name]\n          };\n        }\n      }\n\n      return false;\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this2 = this;\n\n      var called = false;\n\n      $(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this2);\n        }\n      }, duration);\n    }\n\n    function setTransitionEndSupport() {\n      transition = transitionEndTest();\n\n      if (Util.supportsTransitionEnd()) {\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n      }\n    }\n\n    var Util = {\n      TRANSITION_END: 'mmTransitionEnd',\n\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $(element).trigger(transition.end);\n      },\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(transition);\n      }\n    };\n\n    setTransitionEndSupport();\n\n    var MetisMenu = function () {\n      function MetisMenu(element, config) {\n        _classCallCheck(this, MetisMenu);\n\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._transitioning = null;\n\n        this.init();\n      }\n\n      _createClass(MetisMenu, [{\n        key: 'init',\n        value: function init() {\n          var self = this;\n          $(this._element).find('li.' + this._config.activeClass).has('ul').children('ul').attr('aria-expanded', true).addClass(this._config.collapseClass + ' ' + this._config.collapseInClass);\n\n          $(this._element).find('li').not('.' + this._config.activeClass).has('ul').children('ul').attr('aria-expanded', false).addClass(this._config.collapseClass);\n\n          //add the 'doubleTapToGo' class to active items if needed\n          if (this._config.doubleTapToGo) {\n            $(this._element).find('li.' + this._config.activeClass).has('ul').children('a').addClass('doubleTapToGo');\n          }\n          $(this._element).find('li').has('ul').children('a').on(Event.CLICK_DATA_API, function (e) {\n            var _this = $(this);\n            var _parent = _this.parent('li');\n            var _list = _parent.children('ul');\n            if (self._config.preventDefault) {\n              e.preventDefault();\n            }\n            if (_this.attr('aria-disabled') === 'true') {\n              return;\n            }\n            if (_parent.hasClass(self._config.activeClass) && !self._config.doubleTapToGo) {\n              _this.attr('aria-expanded', false);\n              self._hide(_list);\n            } else {\n              self._show(_list);\n              _this.attr('aria-expanded', true);\n            }\n\n            if (self._config.onTransitionStart) {\n              self._config.onTransitionStart(e);\n            }\n\n            //Do we need to enable the double tap\n            if (self._config.doubleTapToGo) {\n              //if we hit a second time on the link and the href is valid, navigate to that url\n              if (self._doubleTapToGo(_this) && _this.attr('href') !== '#' && _this.attr('href') !== '') {\n                e.stopPropagation();\n                document.location = _this.attr('href');\n                return;\n              }\n            }\n          });\n        }\n      }, {\n        key: '_show',\n        value: function _show(element) {\n          if (this._transitioning || $(element).hasClass(this._config.collapsingClass)) {\n            return;\n          }\n          var _this = this;\n          var _el = $(element);\n\n          var startEvent = $.Event(Event.SHOW);\n          _el.trigger(startEvent);\n\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          _el.parent('li').addClass(this._config.activeClass);\n\n          if (this._config.toggle) {\n            this._hide(_el.parent('li').siblings().children('ul.' + this._config.collapseInClass).attr('aria-expanded', false));\n          }\n\n          _el.removeClass(this._config.collapseClass).addClass(this._config.collapsingClass).height(0);\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n\n            _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass + ' ' + _this._config.collapseInClass).height('').attr('aria-expanded', true);\n\n            _this.setTransitioning(false);\n\n            _el.trigger(Event.SHOWN);\n          };\n\n          if (!Util.supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          _el.height(_el[0].scrollHeight).one(Util.TRANSITION_END, complete);\n\n          transitionEndEmulator(TRANSITION_DURATION);\n        }\n      }, {\n        key: '_hide',\n        value: function _hide(element) {\n\n          if (this._transitioning || !$(element).hasClass(this._config.collapseInClass)) {\n            return;\n          }\n          var _this = this;\n          var _el = $(element);\n\n          var startEvent = $.Event(Event.HIDE);\n          _el.trigger(startEvent);\n\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          _el.parent('li').removeClass(this._config.activeClass);\n          _el.height(_el.height())[0].offsetHeight;\n\n          _el.addClass(this._config.collapsingClass).removeClass(this._config.collapseClass).removeClass(this._config.collapseInClass);\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            if (_this._transitioning && _this._config.onTransitionEnd) {\n              _this._config.onTransitionEnd();\n            }\n\n            _this.setTransitioning(false);\n            _el.trigger(Event.HIDDEN);\n\n            _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass).attr('aria-expanded', false);\n          };\n\n          if (!Util.supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          _el.height() == 0 || _el.css('display') == 'none' ? complete() : _el.height(0).one(Util.TRANSITION_END, complete);\n\n          transitionEndEmulator(TRANSITION_DURATION);\n        }\n      }, {\n        key: '_doubleTapToGo',\n        value: function _doubleTapToGo(element) {\n          if (element.hasClass('doubleTapToGo')) {\n            element.removeClass('doubleTapToGo');\n            return true;\n          }\n          if (element.parent().children('ul').length) {\n            $(this._element).find('.doubleTapToGo').removeClass('doubleTapToGo');\n\n            element.addClass('doubleTapToGo');\n            return false;\n          }\n        }\n      }, {\n        key: 'setTransitioning',\n        value: function setTransitioning(isTransitioning) {\n          this._transitioning = isTransitioning;\n        }\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, Default, config);\n          return config;\n        }\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var $this = $(this);\n            var data = $this.data(DATA_KEY);\n            var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\n\n            if (!data) {\n              data = new MetisMenu(this, _config);\n              $this.data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }]);\n\n      return MetisMenu;\n    }();\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = MetisMenu._jQueryInterface;\n    $.fn[NAME].Constructor = MetisMenu;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return MetisMenu._jQueryInterface;\n    };\n    return MetisMenu;\n  }(jQuery);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/metisMenu/dist/metisMenu.js\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.3.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(k, tx, ty) {\n  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * k + tx, y * k + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/project/mybootstrap/~/.4.3.0@d3/build/d3.js\n// module id = 8\n// module chunks = 0 2"],"sourceRoot":""}